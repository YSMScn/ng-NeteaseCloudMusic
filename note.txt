2-1:
*Install cnpm using:npm install cnpm -g --registry=https://registry.npm.taobao.org
*Set defalut npm address to cnpm: npm config set registry https://registry.npm.taobao.org
*npm install -g @angular/cli
*Using cnpm install -g @angular/cli if you are in China and didn't set npm address to https://registry.npm.taobao.org
*Create angular project using: ng new ng-NeteaseCloudMusic --style==less --routing -s --skip-install
*Don't need to add --skip-install, but it could take more time if you are in China, use cnpm install afterwards.
*Using: npm install or cnpm install if you used --skip-install
*Using Visual Studio Code to open this project folder
*Use ng add ng-zorro-antd to install ng-zorro
*Create new folder styles in src/assets/ and copy styles.less into this folder. rename it to index.less
*Edit angular.json. Change root:"styles" to src/assets/styles/index.less, also test:"styles" to src/assets/styless/index.less
*Copy .less file from source code into assets folder
*Add h1 and button(<button nz-button nzType="primary">button</button>) to test

2-2:
*Create module core using: ng g m core
*Core module is used to help app.module, we can import other modules in core module
*Import core module in app.module.ts
*Move (CommonModule,BrowserModule,AppRoutingModule,HttpClientModule,BrowserAnimationsModule) into core module
*(NgZorroAntdModule,FormsModule) will be put into a shared module, because these two modules are used globally
*Create module share using: ng g m share
*Move (NgZorroAntdModule,FormsModule) into share module, add exports for other modules to use these two modules
*Create module pages using:ng g m pages, pages module is used for manage all page modules
*import share module into pages module
*Create services module using: ng g services, this module is used for http services. Import this module in core module
*Import new modules into core module, move AppRoutingModule to the end, otherwise it make cause error when setting routing;
*We can move registerLocaleData to core module, don't forget to import(2 lines)
*Edit core module
*Dont' forget to exports shareModule in core module, otherwise app module can't access NgZorroAntdModule(in share module),the button element won't have style on it
*Aslo AppRoutingModule! After exports these two module, the button element has style on it now.
*We can move provider into core module aswell

3-1:
*Edit app.component.html, create header and footer
*alt+shift+down to copy current line to next line
*Create new module home using: ng g m pages/home -routing
*Edit home routing Routes = [{path:'home',component: HomeComponent,data:{title:"Find"}}];
*Edit app-routing Routes = [{path:'',redirectTo:'/home',pathMatch:'full'}]; redirct to home routing when path is empty

3-2:
*Clone NeteaseCloudMusicApi and install using:npm i; run this using: node app.js
*Create home services in folder services using:ng g s services/home
*Edit home services, write method getBanners(), need to import HttpClient and map
*Exports API_CONFIG in services.module, inject it in home.service's constructor
*Inject home.service in home.component.ts constructor
*Call getBanners() in HomeComponent to test.

3-3:
*Edit home.component.html, added <nz-carousel nzAutoPlay="true" nzEffect="fade">
*Make sure home.module import NgZorroAntdModule and CommonModule

3-4:
*Create wy-carousel component under home component
*Edit wy-carousel.component.html and home.component.html
*Copy banner.png and wy-carousel.component.less
*Use [nzDotRender] and ng-template to set style(dot) for carousel 
*Bind click event with right and left icon
*Bind (click)="onChangeSlide('pre')" and ('next') for right and left icon. Create output event with parameter pre or next. Bind this event in home.component with new method to run function nzCarouselComponent[diretction]()
*In wy-carousel.component.ts, we can change the type of EventEmitter from string to 'pre' | 'next'. Now, the function nzCarouselComponent[diretction]() will only have pre and next two options.
*In home.component.ts, set changeDetection: ChangeDetectionStrategy.OnPush. 3-4 22:00 //There is not this line in source code, but mentioned in video

3-5:
*Get hot tags and personal list. Similar with get banner, create and export data type, write a method to use http.get to get HotTag/PersonalList[].
*3-5 4:30

